/**
 * Synthy.Voice.min.js v0.1
 *
 * A polyphonic customizable synthesizer
 * @author Steven Sojka - Wednesday, February 06, 2013
 *
 * MIT Licensed
 */
var Synthy=function(){Synthy.Voice=function(a,b,c){this.osc=[];this.master=new Synthy.Master(b.master,c);this.envelope=new Synthy.Envelope(b.envelope,c);this.filter=new Synthy.Filter(b.filter,a,c);this.delay=new Synthy.Delay(b.fx.delay,c);this.drive=new Synthy.Drive(b.fx.drive,c);for(var d=0,e=b.osc.length;d<e;d++)this.osc.push(new Synthy.Osc(b.osc[d],a,c)),this.osc[d].output.connect(this.filter.input);this.filter.output.connect(this.envelope.input);this.envelope.output.connect(this.drive.input);
this.drive.output.connect(this.delay.input);this.delay.output.connect(this.master.input);this.master.output.connect(c.destination)};Synthy.Voice.prototype={trigger:function(){for(var a=0,b=this.osc.length;a<b;a++)this.osc[a].trigger();this.filter.trigger();this.envelope.trigger()},release:function(){this.envelope.release();this.filter.release();for(var a=0,b=this.osc.length;a<b;a++)this.osc[a].release(this.envelope.getReleaseTime())},kill:function(){for(var a=0,b=this.osc.length;a<b;a++)this.osc[a].kill()}};
return Synthy}(Synthy||{});
