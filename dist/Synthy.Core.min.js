/**
 * Synthy.Core.min.js v0.1
 *
 * A polyphonic customizable synthesizer
 * @author Steven Sojka - Wednesday, February 06, 2013
 *
 * MIT Licensed
 */
var Synthy=function(b){b.Core=function(a){a=a||{};this.context=a.context||new webkitAudioContext;this._voices={};this.load(a.patch)};b.Core.prototype={trigger:function(a){if(this.patch&&!(a in this._voices)){var c=new b.Voice(a,this.patch,this.context);c.output.connect(this.drive.input);this._voices[a]=c;c.trigger()}},release:function(a){a in this._voices&&(this._voices[a].release(),delete this._voices[a])},kill:function(){for(var a in this._voices)this._voices[a].kill()},load:function(a){a&&(this.patch=
new b.Patch(a),this.delay=new b.Delay(this.patch.fx.delay,this.context),this.drive=new b.Drive(this.patch.fx.drive,this.context),this.master=new b.Master(this.patch.master,this.context),this.drive.output.connect(this.delay.input),this.delay.output.connect(this.master.input),this.master.output.connect(this.context.destination))},save:function(){this.patch.fx.delay=this.delay.getValues();this.patch.fx.drive=this.drive.getValues();this.patch.master=this.master.getValues();return this.patch.save()}};
["setFeedback","setTime","setMix"].forEach(function(a){b.Core.prototype[a.replace("set","setDelay")]=function(){this.delay[a].apply(this.delay,arguments)}});["setAmount","setMix"].forEach(function(a){b.Core.prototype[a.replace("set","setDrive")]=function(){this.drive[a].apply(this.drive,arguments)}});["setGain"].forEach(function(a){b.Core.prototype[a.replace("set","setMaster")]=function(){this.master[a].apply(this.master,arguments)}});b.create=function(a){return new b.Core(a)};return b}(Synthy||{});
