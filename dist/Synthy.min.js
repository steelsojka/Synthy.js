/**
 * Synthy.min.js v0.1
 *
 * A polyphonic customizable synthesizer
 * @author Steven Sojka - Wednesday, February 06, 2013
 *
 * MIT Licensed
 */
var Synthy=function(a){a.Core=function(b){b=b||{};this.context=b.context||new webkitAudioContext;this._voices={};this.load(b.patch)};a.Core.prototype={trigger:function(b){if(this.patch&&!(b in this._voices)){var c=new a.Voice(b,this.patch,this.context);this._voices[b]=c;c.trigger()}},release:function(b){b in this._voices&&(this._voices[b].release(),delete this._voices[b])},kill:function(){for(var b in this._voices)this._voices[b].kill()},load:function(b){b&&(this.patch=new a.Patch(b))},save:function(){return this.patch.save()}};
a.create=function(b){return new a.Core(b)};return a}(Synthy||{}),Synthy=function(a){a.Util={noteToFreq:function(b){return 440*Math.pow(2,(b-69)/12)}};return a}(Synthy||{}),Synthy=function(){Synthy.Osc=function(a,b,c){this.context=c;this.modOsc=c.createOscillator();this.tremelo=c.createGainNode();this.osc=c.createOscillator();this.output=this.mix=c.createGainNode();this.osc.connect(this.mix);this.modOsc.connect(this.tremelo);this.tremelo.connect(this.osc.frequency);this.tremelo.gain.value=a.mod.mix;
this.modOsc.frequency.value=a.mod.rate;this.modOsc.type=a.mod.type;this.range=a.range;this.harmony=a.harmony;this.osc.frequency.value=Synthy.Util.noteToFreq(b+12*this.range+this.harmony);this.osc.detune.value=a.detune;this.osc.type=a.type;this.mix.gain.value=a.mix};Synthy.Osc.prototype={trigger:function(){this.modOsc.start(0);this.osc.start(0)},release:function(a){var b=this.context.currentTime;this.modOsc.stop(b+a);this.osc.stop(b+a)},kill:function(){this.modOsc.stop(0);this.osc.stop(0)}};return Synthy}(Synthy||
{}),Synthy=function(a){a.Envelope=function(b,a){this.context=a;this.envelope=a.createGainNode();this.envelope.gain.value=0;this.patch=b;this.input=this.output=this.envelope};a.Envelope.prototype={trigger:function(){var b=this.context.currentTime,a=this.envelope.gain,d=b+this.patch.attack/10;a.setValueAtTime(0,b);a.linearRampToValueAtTime(1,d);a.setTargetValueAtTime(this.patch.sustain/100,d,this.patch.decay/100+0.0010)},release:function(){var b=this.context.currentTime,a=this.envelope.gain;a.cancelScheduledValues(b);
a.setValueAtTime(a.value,b);a.linearRampToValueAtTime(0,b+this.patch.release/100)},getReleaseTime:function(){return this.patch.release/100}};return a}(Synthy||{}),Synthy=function(a){a.Filter=function(b,c,d){this.context=d;this.filter=d.createBiquadFilter();this.filter.frequency.value=b.cutoff;this.filter.Q.value=b.q;this.filter.type=b.type;this.freq=a.Util.noteToFreq(c);this.env=b.env;this.patch=b;this.input=this.output=this.filter};a.Filter.prototype={trigger:function(){var b=this.patch,a=this.context.currentTime,
d=this.filter.frequency;this.startLevel=this.frequencyFromCutoff(b.cutoff/100);this.attackLevel=this.frequencyFromCutoff(b.cutoff/100+this.env/120);this.sustainLevel=this.frequencyFromCutoff(b.cutoff/100+this.env/120*(b.sustain/100));this.attackEnd=a+b.attack/20;d.value=this.startLevel;d.setValueAtTime(this.startLevel,a);d.linearRampToValueAtTime(this.attackLevel,this.attackEnd);d.setTargetValueAtTime(this.sustainLevel,this.attackEnd,b.decay/100)},frequencyFromCutoff:function(b){var a=0.5*this.context.sampleRate,
b=Math.pow(2,9*b-1)*this.freq;b>a&&(b=a);return b},release:function(){var b=this.context.currentTime,a=this.filter.frequency;a.cancelScheduledValues(b);a.setValueAtTime(a.value,b);a.linearRampToValueAtTime(this.startLevel,b+this.patch.release/100)}};return a}(Synthy||{}),Synthy=function(a){a.Master=function(b,a){this.input=this.output=a.createGainNode();this.output.gain.value=b.output};a.Master.prototype={};return a}(Synthy||{}),Synthy=function(){Synthy.Voice=function(a,b,c){this.osc=[];this.master=
new Synthy.Master(b.master,c);this.envelope=new Synthy.Envelope(b.envelope,c);this.filter=new Synthy.Filter(b.filter,a,c);this.delay=new Synthy.Delay(b.fx.delay,c);this.drive=new Synthy.Drive(b.fx.drive,c);for(var d=0,e=b.osc.length;d<e;d++)this.osc.push(new Synthy.Osc(b.osc[d],a,c)),this.osc[d].output.connect(this.filter.input);this.filter.output.connect(this.envelope.input);this.envelope.output.connect(this.drive.input);this.drive.output.connect(this.delay.input);this.delay.output.connect(this.master.input);
this.master.output.connect(c.destination)};Synthy.Voice.prototype={trigger:function(){for(var a=0,b=this.osc.length;a<b;a++)this.osc[a].trigger();this.filter.trigger();this.envelope.trigger()},release:function(){this.envelope.release();this.filter.release();for(var a=0,b=this.osc.length;a<b;a++)this.osc[a].release(this.envelope.getReleaseTime())},kill:function(){for(var a=0,b=this.osc.length;a<b;a++)this.osc[a].kill()}};return Synthy}(Synthy||{}),Synthy=function(){Synthy.Patch=function(a){for(var b in a)a.hasOwnProperty(b)&&
(this[b]=a[b])};Synthy.Patch.prototype={save:function(){var a={},b;for(b in this)this.hasOwnProperty(b)&&(a[b]=this[b]);return JSON.stringify(a)},setOscProperty:function(a,b,c){this.osc[a][b]=c},setFilterProperty:function(a,b){this.filter[a]=b},setMaster:function(a,b){this.master[a]=b}};["attack","decay","sustain","release"].forEach(function(a){Synthy.Patch.prototype["setEnvelope"+(a.charAt(0).toUpperCase()+a.slice(1))]=function(b){this.envelope[a]=b}});return Synthy}(Synthy||{}),Synthy=function(a){a.Drive=
function(b,a){this.context=a;this.drive=a.createWaveShaper();this.input=a.createGainNode();this.output=a.createGainNode();this.driveOutput=a.createGainNode();this.input.connect(this.drive);this.input.connect(this.output);this.drive.connect(this.driveOutput);this.driveOutput.connect(this.output);this.setDrive(b.drive);this.setMix(b.mix)};a.Drive.prototype={setDrive:function(b){for(var a=this.drive,d=new Float32Array(22050),b=2*b/(1-b),e=0;22050>e;e+=1){var f=2*(e-0)/22050+-1;d[e]=(1+b)*f/(1+b*Math.abs(f))}a.curve=
d},setMix:function(b){this.driveOutput.gain.value=b}};return a}(Synthy||{}),Synthy=function(a){a.Delay=function(b,a){this.context=a;this.delay=a.createDelay();this.gain=a.createGainNode();this.output=a.createGainNode();this.delayGain=a.createGainNode();this.input=a.createGainNode();this.delay.connect(this.gain);this.gain.connect(this.delay);this.input.connect(this.delay);this.delay.connect(this.delayGain);this.delayGain.connect(this.output);this.input.connect(this.output);this.setFeedback(b.feedback);
this.setDelayTime(b.time);this.setWet(b.wet)};a.Delay.prototype={setFeedback:function(a){this.gain.gain.value=a},setDelayTime:function(a){this.delay.delayTime.value=a},setWet:function(a){this.delayGain.gain.value=a}};return a}(Synthy||{});
