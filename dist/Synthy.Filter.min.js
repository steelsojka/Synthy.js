/**
 * Synthy.Filter.min.js v0.1
 *
 * A polyphonic customizable synthesizer
 * @author Steven Sojka - Tuesday, February 05, 2013
 *
 * MIT Licensed
 */
var Synthy=function(b){b.Filter=function(a,c){this.filter=b.context.createBiquadFilter();this.filter.frequency.value=a.cutoff;this.filter.Q.value=a.q;this.filter.type=a.type;this.freq=c;this.env=a.env;this.patch=a;this.input=this.output=this.filter};b.Filter.prototype={trigger:function(){var a=this.patch,c=b.context.currentTime;this.startLevel=this.frequencyFromCutoff(a.cutoff/100);this.attackLevel=this.frequencyFromCutoff(a.cutoff/100+this.env/120);this.sustainLevel=this.frequencyFromCutoff(a.cutoff/
100+this.env/120*(a.S/100));this.attackEnd=c+a.A/20;this.filter.frequency.value=this.startLevel;this.filter.frequency.setValueAtTime(this.startLevel,c);this.filter.frequency.linearRampToValueAtTime(this.attackLevel,this.attackEnd);this.filter.frequency.setTargetValueAtTime(this.sustainLevel,this.attackEnd,a.D/100)},frequencyFromCutoff:function(a){var c=0.5*b.context.sampleRate,a=Math.pow(2,9*a-1)*this.freq;a>c&&(a=c);return a},release:function(){var a=b.context.currentTime;this.filter.frequency.cancelScheduledValues(a);
this.filter.frequency.setValueAtTime(this.filter.frequency.value,a);this.filter.frequency.linearRampToValueAtTime(this.startLevel,a+this.patch.R/100)}};return b}(Synthy||{});
