/**
 * Synthy.Filter.min.js v0.1
 *
 * A polyphonic customizable synthesizer
 * @author Steven Sojka - Thursday, February 07, 2013
 *
 * MIT Licensed
 */
var Synthy=function(d){d.Filter=function(a,b,c){this.context=c;this.filter=c.createBiquadFilter();this.filter.frequency.value=a.cutoff;this.filter.Q.value=a.q;this.filter.type=a.type;this.freq=d.Util.noteToFreq(b);this.env=a.envelope;this.patch=a;this.input=this.output=this.filter};d.Filter.prototype={trigger:function(){var a=this.patch,b=this.context.currentTime,c=this.filter.frequency;this.startLevel=this.frequencyFromCutoff(a.cutoff/100);this.attackLevel=this.frequencyFromCutoff(a.cutoff/100+this.env/
120);this.sustainLevel=this.frequencyFromCutoff(a.cutoff/100+this.env/120*(a.sustain/100));this.attackEnd=b+a.attack/20;c.value=this.startLevel;c.setValueAtTime(this.startLevel,b);c.linearRampToValueAtTime(this.attackLevel,this.attackEnd);c.setTargetValueAtTime(this.sustainLevel,this.attackEnd,a.decay/100)},frequencyFromCutoff:function(a){var b=0.5*this.context.sampleRate,a=Math.pow(2,9*a-1)*this.freq;a>b&&(a=b);return a},release:function(){var a=this.context.currentTime,b=this.filter.frequency;b.cancelScheduledValues(a);
b.setValueAtTime(b.value,a);b.linearRampToValueAtTime(this.startLevel,a+this.patch.release/100)}};return d}(Synthy||{});
